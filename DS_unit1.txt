/* 

->  Write a c++ program to check wheather the matrix is
      identity matrix or not.
____________________________________________________________*/
#include<iostream>
using namespace std;
class A
{
	public:
	int a[3][3],i,j,flag=0;
	void get()
	{
		cout<<"Enter array elements :\n";
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				cin>>a[i][j];
			}
		}
	}
	void put()
	{
		cout<<"\nMatrix :\n";
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				cout<<a[i][j]<<"\t";
			}
			cout<<"\n";
		}
	}
	void print()
	{
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				if (i == j && a[i][j] != 1)
				{
					flag = -1;
					break;
				}
				else if (i != j && a[i][j] != 0)
				{
					flag = -1;
					break;
				}
			}
		}
		
		if(flag==0)
		{
			cout<<"It is a IDENTITY MATRIX\n";
		}
		else
		{
			cout<<"It is NOT an identity matrix\n";

		}
	}
};
int main()
{
	A a1;
	a1.get();
	a1.put();
	a1.print();
}


2.
// Convert the matrix into lower triangular matrix

using namespace std;
#include<iostream>
class C
{
	public:
	int arr[3][3],i,j;
		void get()
		{
			for(i=0;i<3;i++)
			{
				for(j=0;j<3;j++)
				{
					cin>>arr[i][j];
				}
			}
		}
		void put()
		{
			cout<<"Matrix\n";
			for(i=0;i<3;i++)
			{
				for(j=0;j<3;j++)
				{
					cout<<arr[i][j]<<"\t";
				}
				cout<<endl;
			}
		}
		void lower()
		{
			for(i=0;i<3;i++)
			{
				for(j=0;j<3;j++)
				{
					if(i<j)
					{
						arr[i][j]=0;
					}
				}
			}
			cout<<"\nLower Triangular Matrix\n";
			for(i=0;i<3;i++)
			{
				for(j=0;j<3;j++)
				{
					cout<<arr[i][j]<<"\t";
				}
				cout<<"\n";
			}
		}
};
int main()
{
	C obj;
	obj.get();
	obj.put();
	obj.lower();
}


3.
//   Write a program to check and create Scalar matrix.

#include<iostream>
using namespace std;
 class A
 {
	public:
	int arr[3][3],f=1;
		void getdata()
		{
			for(int i=0;i<3;i++)
			{
				for(int j=0;j<3;j++)
				{
					cin >> arr[i][j];
				}
			}
		}
		void putdata()
		{
			for(int i=0;i<3;i++)
			{
				for(int j=0;j<3;j++)
				{
					cout<<arr[i][j]<<"\t";
				}
				cout<<endl;
			}
		}
		void check()
		{
			for(int i=0;i<3;i++)
			{
				for(int j=0;j<3;j++)
				{
					if(i==j && arr[i][j]==0)
					{
						f=0;
						break;
					}
					
					if(i!=j && arr[i][j]!=0)
					{
						f=0;
						break;
					}
				}
			}
        
			for(int i=0;i<3-1;i++)
			{
				if(arr[i][i]!=arr[i+1][i+1])
				{
					f=0;
					break;
				}
			}
			if(f==1)
			{
				cout<<"\nThis is scalar matrix\n";
			}
			else
			{
				cout<<"\nThis is  not scalar matrix\n";
			}	
		}
 };
 int main()
 {
	a a1;
	a1.getdata();
	a1.putdata();
	a1.check();
 }


 4.
 // Check the matrix is sparse matrix or not

#include<iostream>
using namespace std;
class sparse
{
	public:
	int a[3][3],i,j,zero=0,NonZero=0;
	void get()
	{
		cout<<"Enter array elements :\n";
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				cin>>a[i][j];
			}
		}
	}
	void put()
	{
		cout<<"\nMatrix :\n";
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				cout<<a[i][j]<<"\t";
			}
			cout<<"\n";
		}
	}
	void check()
	{
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				if(a[i][j]==0)
				{
					zero += 1;
				}
				else
				{
					NonZero += 1;
				}
			}
		}
		if(zero>NonZero)
		{
			cout<<"This Matrix is Sparse Matrix\n";
		}
		else
		{
			cout<<"This matrix is not sparse Matrix"<<endl;
		}
	}
};
int main()
{
	sparse a1;
	a1.get();
	a1.put();
	a1.check();
}


5.
// Convert the matrix into upper triangular matrix

using namespace std;
#include<iostream>
class B
{
	public:
	int arr[3][3],i,j;
		void get()
		{
			for(i=0;i<3;i++)
			{
				for(j=0;j<3;j++)
				{
					cin>>arr[i][j];
				}
			}
		}
		void put()
		{
			cout<<"Matrix\n";
			for(i=0;i<3;i++)
			{
				for(j=0;j<3;j++)
				{
					cout<<arr[i][j]<<"\t";
				}
				cout<<endl;
			}
		}
		void upper()
		{
			for(i=0;i<3;i++)
			{
				for(j=0;j<3;j++)
				{
					if(i>j)
					{
						arr[i][j]=0;
					}
				}
			}
			cout<<"\nUpper Triangular Matrix\n";
			for(i=0;i<3;i++)
			{
				for(j=0;j<3;j++)
				{
					cout<<arr[i][j]<<"\t";
				}
				cout<<"\n";
			}
		}
};
int main()
{
	B obj;
	obj.get();
	obj.put();
	obj.upper();
}


6.
//  Check the given matrix is diagonal matrix or not.

#include<iostream>
using namespace std;
class A
{
	public :
	int a[3][3],flag1=0,flag2=0,flag3=0;

	void get()
	{
		cout<<"Enter array elements : \n";
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				cin>>a[i][j];
			}
		}
	}

	void put()
	{
		cout<<"\nMatrix: \n";
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				cout<<a[i][j]<<"\t";
			}
			cout<<"\n";
		}
	}

	void check()
	{
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				if(i==j)
				{
					if(a[i][j] == 0)
					{
						flag1=1; // check the leading diagonal value is 0 or not.
						break;
					}
				}
				else
				{
					if(a[i][j] != 0)
					{
						flag2 = 1; // check the non-leading diagonal value is 0 or not.
						break;
					}
				}
			}
		}

		for(int i=0;i<3;i++)
		{
			if(a[i][i] == a[i+1][i+1]) // // check the leading diagonal value is same or not.
			{
				flag3 = 1;
				break;
			}
		}

		if(flag1==1 || flag2==1 || flag3==1)
		{
			cout<<"Not a diagonal matrix\n";
		}
		else
		{
			cout<<"\nDiagonal Matrix\n";
		}


	}
};

int main()
{
	A a1;
	a1.get();
	a1.put();
	a1.check();
}

/* 

output : 

Enter array elements : 
5
0
0
0
10
0
0
0
15

Matrix: 
5	0	0	
0	10	0	
0	0	15	

Diagonal Matrix

*/


7.
// Reverse the array elements

#include<iostream>
using namespace std;
class B
{
	public:
	int a[5],i;
		void getdata()
		{
			cout<<"Enter the elements of an array :\n"; // 10 20 30 40 50
			for(i=0;i<5;i++)
			{
				cin>>a[i];
			}
			cout<<"\nOriginal Array : ";
			for(i=0;i<5;i++)
			{
				cout<<a[i]<<"\t";
			}
			cout<<endl;
		}
		void reverse()
		{
			cout<<"\nReverse Array : ";
			for(i=4;i>=0;i--)
			{
				cout<<a[i]<<"\t"; // 50 40 30 20 10
			}
			cout<<endl;			
		}
};
int main()
{
	B b1;
	b1.getdata();
	b1.reverse();
}



8.
#include<iostream>
using namespace std;
class A
{
	public :
		int a[5],sum=0,add=0;
	
	void get()
	{
		cout<<"Enter array elements :\n";
		for(int i=0;i<5;i++)
		{
			cin>>a[i];
		}
	}
	void put()
	{
		cout<<"\nArray : ";
		for(int i=0;i<5;i++)
		{
			cout<<a[i]<<"\t";
		}
		cout<<endl;
	}
	void even_odd()
	{
		for(int i=0;i<5;i++)
		{
			if(a[i] %2== 0)
			{
				sum = sum + a[i];
			}
			else
			{
				add = add + a[i];
			}
		}
		cout<<"Sum of even element : "<<sum<<endl;
		cout<<"Sum of odd element : "<<add<<endl;
	}
};
int main()
{
	A a1;
	a1.get();
	a1.put();
	a1.even_odd();
}


9.
/* write a c++ code to print 1d array & find the maximum &
   minimum element of an array.(using class)
__________________________________________________________*/
using namespace std;
#include<iostream>
class A
{
   public :
   int arr[5]={1,2,3,4,5},N = 5,max = arr[0], min = arr[0];

      void get_data()
      {
	      cout<<"Array : ";
	      for(int i=0;i<N;i++)
	      {
		      cout<<arr[i]<<"\t";
	      }
	      cout<<endl;
      }
      void put_data()
      {
         for(int i = 1; i < N; i++)
         {
            if(max < arr[i])
            {
               max = arr[i];
            }
            if(min > arr[i])
            {
               min = arr[i];
            }
         }
         cout<<"Maximum Value = "<<max<<"\n";
         cout<<"Minimum Value = "<<min<<endl;
      }
};
int main()
{
   A a1;
   a1.get_data();
   a1.put_data();
}



10.
// Print Matrix Multiplication
#include<iostream>
using namespace std;
class A
{
	public :
		int a[3][3],b[3][3],sum[3][3];
	
	void get()
	{
		cout<<"Enter 1st matrix elements :\n";
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				cin>>a[i][j];
			}
		}
		cout<<"Enter 2nd matrix elements :\n";
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				cin>>b[i][j];
			}
		}
	}
	void put()
	{
		cout<<"\n1st Matrix : \n";
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				cout<<a[i][j]<<"\t";
			}
			cout<<"\n";
		}
		cout<<"\n2nd Matrix : \n";
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				cout<<b[i][j]<<"\t";
			}
			cout<<"\n";
		}
	}
	void add()
	{
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				sum[i][j]=0;
				for(int k=0;k<3;k++)
				{
					sum[i][j] += a[i][k] * b[k][j];
				}
			}
		}

		cout<<"\nMatrix Multiplication : \n";
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				cout<<sum[i][j]<<"\t";
			}
			cout<<"\n";
		}
	}
	
};
int main()
{
	A a1;
	a1.get();
	a1.put();
	a1.add();
}