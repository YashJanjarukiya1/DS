/* Implement the Queue using Linked-list */

#include<iostream>
using namespace std;

class Node
{
	public :
		int value;
		Node *next;
};

Node *Front = NULL;
Node *Rear = NULL;

void enQ()
{
	Node *Temp = new Node();
	int num;
	
	cout << "Enter the value of Q :: ";
	cin >> num;
	Temp->value = num;
	Temp->next = NULL;
	
	if(Front == NULL && Rear == NULL)
	{
		Front = Rear = Temp;
	}
	else
	{
		Rear->next = Temp;
		Rear = Temp;
	}
}

void deQ()
{
	if(Front == NULL && Rear == NULL)
	{
		cout << "\nQ is Empty(Underflow)\n";
	}
	else if(Front->next == NULL)
	{
		Node *temp = Front;
		cout << "\nDeleted element of Q is :: " << temp->value <<endl;
		delete temp;
		Front = Rear = NULL;
	}
	else
	{
		Node *temp = Front;
		Front = Front->next;
		cout << "\nDeleted element of Q is :: " << temp->value <<endl;
		delete temp;
	}
}

void peek()
{
	if(Front == NULL && Rear == NULL)
	{
		cout << "\nQ is Underflow(Empty)\n";
	}
	else
	{
		cout << "\nFront element of the Q is :: " << Front->value << endl;
	}
}

void display()
{
	if(Front == NULL && Rear == NULL)
	{
		cout << "\nQ is Underflow(Empty)\n";
	}
	else
	{
		Node *show = Front;
		cout << "\nQueue :: ";
		while(show != NULL)
		{
			cout << show->value << "\t";
			show = show->next;
		}
	}
}

int main()
{
	int Choice;
	
	while(Choice != 5)
	{
		cout << "\n----Menu---- \n1.enQ \n2.deQ \n3.peek \n4.show \n5.exit() \nEnter Choice :: ";
		cin >> Choice;
		
		switch(Choice)
		{
			case 1:
				enQ();
			break;
			
			case 2:
				deQ();
			break;
			
			case 3:
				peek();
			break;
			
			case 4:
				display();
			break;
			
			default:
				exit(0);
		}
	}
}